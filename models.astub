import org.checkerframework.checker.tainting.qual.*;

package io.reactivex;

class Scheduler { }

class Single<T> implements SingleSource<T> {
  @PolyTainted Single<T> observeOn(Single<T> this, @PolyTainted Scheduler arg0);
  <R> @PolyTainted R to(@PolyTainted Single<T> this, Function<? super Single<T>,R> arg0);
}

class Maybe<T> implements MaybeSource<T> {
  @PolyTainted Maybe<T> doOnComplete(@PolyTainted Maybe<T> this, Action arg0);
  void subscribe(MaybeObserver<? super @Untainted T> arg0);
}

package io.reactivex.schedulers;
class Schedulers {
    static @Untainted Scheduler single();
}
